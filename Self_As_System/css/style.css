body {
  /* background-image: url(/Self_As_System/images/background.png); */
  background-image: linear-gradient(#e5c8f6, #fff6ee, #ffffff);
  width: 100%;
  margin: 0;
}

a {
  text-decoration: none;
  color: white;
}

.zoom {
  position: sticky;
  top: 0.5vh;
  will-change: transform;
  width: 100%;
  transform: scale(2.2);
}

.zoomtext {
  position: sticky;
  top: 50%;
  left: 50%; /* Center horizontally within the container */
  /* transform: translate(-50%, -50%); */
  will-change: transformtext;
  text-align: center;
  /* color: white;  */
  font-size: 10rem;
}

p {
  z-index: 2;
  text-align: center; /* Center text within the container */
  color: rgb(157, 94, 220);
  /* background-color: black; */
  padding: 10px;
  opacity: 1;
}

.zoomtext h1 {
  z-index: 2;
  text-align: center; /* Center text within the container */
  color: white; /* Text color, you can adjust this */
  background-color: black; /* Background color to make the text more visible */
  /* padding: 10px; */
  opacity: 1;
  /*transition: opacity 0.5s; */
}

/* .zoom h1 .show {
  opacity: 1;
} */

.bottom {
  height: 150vh;
  position: relative;
  padding: 200px;
  /* transform: scale(2.2); */
}

.bottom .container {
  margin: 0;
  padding: 0;
  width: auto;
}

.top {
  height: 0vh;
}

.wrap {
  height: 400vh;
  position: relative; /* Add relative positioning to the container */
}

section {
  /* display: grid; */
  /* place-items: center; */
  /* align-content: center; */
  /* justify-content: center; */
  min-height: 70vh;
}

.hidden {
  opacity: 0;
  transition: translateX(-100%);
  transition: all 1s; /* You can add a transition for a smooth fade-in effect */
}

.hidden p {
  z-index: 2;
  text-align: center; /* Center text within the container */
  color: rgb(157, 94, 220);
  font-size: 30px;
  padding: 10px;
  opacity: 1;
}

.hidden h1 {
  z-index: 2;
  text-align: center; /* Center text within the container */
  color: rgb(157, 94, 220);
  font-size: 60px;
  padding: 10px;
  opacity: 1;
  background-color: none;
}

.textappear:nth-child(3) {
  transition-delay: 1s;
}

.show {
  opacity: 1;
  filter: blur(0);
}

.bottomstart {
  height: 10vh;
  position: relative;
}

/* .box {
  height: 200px;
  background-color: plum;
  position: absolute;
  bottom: -800px;
  left: 0;
  width: 100%;
  /* display: flex;
  align-items: flex-end; */
/* }  */

.bottomstart img {
  max-width: 400px; /* Set a maximum width for the image */
  height: auto; /* Maintain the image's aspect ratio */
  display: block; /* Make the image a block-level element */
  margin: 0 auto;
  margin-bottom: 0;
}

.image-container {
  position: relative;
  text-align: center;
}

/* .centered-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 20px 30px;
  /* background-color: #007bff; Customize button background color */
/* background-image: url(/Self_As_System/images/button.png); */
/* color: #fff;  */
/* border: none;
  cursor: pointer; */
/* }  */

.image-button {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* padding: 100px 220px; */
  width: 485px;
  height: 215px;
  background-image: url(/Self_As_System/images/button.png);
  background-size: cover; /* Make sure the background image covers the button */
  border: none;
  cursor: pointer;
  z-index: 1;
}

.image-button::before {
  content: ""; /* Create an empty pseudo-element */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1; /* Place the pseudo-element below the button text */
}

.button-text {
  position: relative;
  z-index: 1;
  font-size: 60px;
  font-weight: 500;
}

.image-button:hover {
  filter: blur(2px);
  mix-blend-mode: multiply;
}
